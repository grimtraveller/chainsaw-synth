#############################################################################
# Makefile for building: synth
# Generated by qmake (2.01a) (Qt 4.7.0) on: Tue Nov 2 21:30:31 2010
# Project:  synth.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile synth.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -Wno-unused -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -lasound -ljack -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ADSR.cpp \
		alsamidi.cpp \
		Buffer.cpp \
		jackclient.cpp \
		AnalogueOSC.cpp \
		Osc.cpp \
		SoundProcessor.cpp \
		synthinit.cpp \
		Voice.cpp \
		VoiceManager.cpp \
		MoogVCF.cpp \
		blo/ladspa-util.c \
		blo/blo.c moc_synthui.cpp
OBJECTS       = ADSR.o \
		alsamidi.o \
		Buffer.o \
		jackclient.o \
		AnalogueOSC.o \
		Osc.o \
		SoundProcessor.o \
		synthinit.o \
		Voice.o \
		VoiceManager.o \
		MoogVCF.o \
		ladspa-util.o \
		blo.o \
		moc_synthui.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		synth.pro
QMAKE_TARGET  = synth
DESTDIR       = 
TARGET        = synth

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_synth.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: synth.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile synth.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile synth.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/synth1.0.0 || $(MKDIR) .tmp/synth1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/synth1.0.0/ && $(COPY_FILE) --parents ADSR.h alsamidi.h Buffer.h Note.h AnalogueOSC.h SoundProcessor.h synthinit.h Voice.h VoiceManager.h synthui.h VoiceParameters.h Parameters.h MoogVCF.h Osc.h blo/blo.h blo/ladspa-util.h .tmp/synth1.0.0/ && $(COPY_FILE) --parents ADSR.cpp alsamidi.cpp Buffer.cpp jackclient.cpp AnalogueOSC.cpp Osc.cpp SoundProcessor.cpp synthinit.cpp Voice.cpp VoiceManager.cpp MoogVCF.cpp blo/ladspa-util.c blo/blo.c .tmp/synth1.0.0/ && $(COPY_FILE) --parents synth.ui .tmp/synth1.0.0/ && (cd `dirname .tmp/synth1.0.0` && $(TAR) synth1.0.0.tar synth1.0.0 && $(COMPRESS) synth1.0.0.tar) && $(MOVE) `dirname .tmp/synth1.0.0`/synth1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/synth1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_synthui.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_synthui.cpp
moc_synthui.cpp: ui_synth.h \
		VoiceParameters.h \
		synthui.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) synthui.h -o moc_synthui.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_synth.h
compiler_uic_clean:
	-$(DEL_FILE) ui_synth.h
ui_synth.h: synth.ui
	/usr/bin/uic-qt4 synth.ui -o ui_synth.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

ADSR.o: ADSR.cpp ADSR.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ADSR.o ADSR.cpp

alsamidi.o: alsamidi.cpp alsamidi.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o alsamidi.o alsamidi.cpp

Buffer.o: Buffer.cpp Buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Buffer.o Buffer.cpp

jackclient.o: jackclient.cpp synthinit.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h \
		alsamidi.h \
		synthui.h \
		ui_synth.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jackclient.o jackclient.cpp

AnalogueOSC.o: AnalogueOSC.cpp AnalogueOSC.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h \
		blo/blo.h \
		blo/ladspa-util.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AnalogueOSC.o AnalogueOSC.cpp

Osc.o: Osc.cpp Osc.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Osc.o Osc.cpp

SoundProcessor.o: SoundProcessor.cpp SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SoundProcessor.o SoundProcessor.cpp

synthinit.o: synthinit.cpp synthinit.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h \
		VoiceManager.h \
		Voice.h \
		Osc.h \
		ADSR.h \
		MoogVCF.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o synthinit.o synthinit.cpp

Voice.o: Voice.cpp Voice.h \
		Osc.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h \
		synthinit.h \
		ADSR.h \
		MoogVCF.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Voice.o Voice.cpp

VoiceManager.o: VoiceManager.cpp VoiceManager.h \
		Voice.h \
		Osc.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h \
		synthinit.h \
		ADSR.h \
		MoogVCF.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o VoiceManager.o VoiceManager.cpp

MoogVCF.o: MoogVCF.cpp MoogVCF.h \
		SoundProcessor.h \
		Buffer.h \
		Note.h \
		Parameters.h \
		VoiceParameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MoogVCF.o MoogVCF.cpp

ladspa-util.o: blo/ladspa-util.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ladspa-util.o blo/ladspa-util.c

blo.o: blo/blo.c blo/blo.h \
		blo/ladspa-util.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o blo.o blo/blo.c

moc_synthui.o: moc_synthui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_synthui.o moc_synthui.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

